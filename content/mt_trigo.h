//  ██▀▀█▀▀██▀▀▀▀▀▀▀█▀▀█            ▄▄   ▄▄
//  ██  ▀  █▄  ▀██▄ ▀ ▄█  ▄█▄█ ▄▀██ ██▀  ██▄
//  █  █ █  ▀▀  ▄█  █  █  ██ █ ▀▄██ ▀█▄▄ ██ █
//  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
// ─────────────────────────────────────────────────────────────────────────────
//  MSXmath 1.7.0 by Guillaume "Aoineko" Blanchard
//  under CC-BY-SA free license
// 
//  Generated: Sun Dec 29 01:56:56 2024
//  Parameters: Entries=256, Bytes=2 (16-bits), Shift=6 (Q10.6)
// ─────────────────────────────────────────────────────────────────────────────

//  Sinus table. Range [0:Pi*2[
const unsigned short g_Sinus256[] = {
	0x0000, 0x0002, 0x0003, 0x0005, 0x0006, 0x0008, 0x0009, 0x000B, 
	0x000C, 0x000E, 0x0010, 0x0011, 0x0013, 0x0014, 0x0016, 0x0017, 
	0x0018, 0x001A, 0x001B, 0x001D, 0x001E, 0x0020, 0x0021, 0x0022, 
	0x0024, 0x0025, 0x0026, 0x0027, 0x0029, 0x002A, 0x002B, 0x002C, 
	0x002D, 0x002E, 0x002F, 0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 
	0x0035, 0x0036, 0x0037, 0x0038, 0x0038, 0x0039, 0x003A, 0x003B, 
	0x003B, 0x003C, 0x003C, 0x003D, 0x003D, 0x003E, 0x003E, 0x003E, 
	0x003F, 0x003F, 0x003F, 0x0040, 0x0040, 0x0040, 0x0040, 0x0040, 
	0x0040, 0x0040, 0x0040, 0x0040, 0x0040, 0x0040, 0x003F, 0x003F, 
	0x003F, 0x003E, 0x003E, 0x003E, 0x003D, 0x003D, 0x003C, 0x003C, 
	0x003B, 0x003B, 0x003A, 0x0039, 0x0038, 0x0038, 0x0037, 0x0036, 
	0x0035, 0x0034, 0x0033, 0x0032, 0x0031, 0x0030, 0x002F, 0x002E, 
	0x002D, 0x002C, 0x002B, 0x002A, 0x0029, 0x0027, 0x0026, 0x0025, 
	0x0024, 0x0022, 0x0021, 0x0020, 0x001E, 0x001D, 0x001B, 0x001A, 
	0x0018, 0x0017, 0x0016, 0x0014, 0x0013, 0x0011, 0x0010, 0x000E, 
	0x000C, 0x000B, 0x0009, 0x0008, 0x0006, 0x0005, 0x0003, 0x0002, 
	0x0000, 0xFFFE, 0xFFFD, 0xFFFB, 0xFFFA, 0xFFF8, 0xFFF7, 0xFFF5, 
	0xFFF4, 0xFFF2, 0xFFF0, 0xFFEF, 0xFFED, 0xFFEC, 0xFFEA, 0xFFE9, 
	0xFFE8, 0xFFE6, 0xFFE5, 0xFFE3, 0xFFE2, 0xFFE0, 0xFFDF, 0xFFDE, 
	0xFFDC, 0xFFDB, 0xFFDA, 0xFFD9, 0xFFD7, 0xFFD6, 0xFFD5, 0xFFD4, 
	0xFFD3, 0xFFD2, 0xFFD1, 0xFFD0, 0xFFCF, 0xFFCE, 0xFFCD, 0xFFCC, 
	0xFFCB, 0xFFCA, 0xFFC9, 0xFFC8, 0xFFC8, 0xFFC7, 0xFFC6, 0xFFC5, 
	0xFFC5, 0xFFC4, 0xFFC4, 0xFFC3, 0xFFC3, 0xFFC2, 0xFFC2, 0xFFC2, 
	0xFFC1, 0xFFC1, 0xFFC1, 0xFFC0, 0xFFC0, 0xFFC0, 0xFFC0, 0xFFC0, 
	0xFFC0, 0xFFC0, 0xFFC0, 0xFFC0, 0xFFC0, 0xFFC0, 0xFFC1, 0xFFC1, 
	0xFFC1, 0xFFC2, 0xFFC2, 0xFFC2, 0xFFC3, 0xFFC3, 0xFFC4, 0xFFC4, 
	0xFFC5, 0xFFC5, 0xFFC6, 0xFFC7, 0xFFC8, 0xFFC8, 0xFFC9, 0xFFCA, 
	0xFFCB, 0xFFCC, 0xFFCD, 0xFFCE, 0xFFCF, 0xFFD0, 0xFFD1, 0xFFD2, 
	0xFFD3, 0xFFD4, 0xFFD5, 0xFFD6, 0xFFD7, 0xFFD9, 0xFFDA, 0xFFDB, 
	0xFFDC, 0xFFDE, 0xFFDF, 0xFFE0, 0xFFE2, 0xFFE3, 0xFFE5, 0xFFE6, 
	0xFFE8, 0xFFE9, 0xFFEA, 0xFFEC, 0xFFED, 0xFFEF, 0xFFF0, 0xFFF2, 
	0xFFF4, 0xFFF5, 0xFFF7, 0xFFF8, 0xFFFA, 0xFFFB, 0xFFFD, 0xFFFE, 
};

//  Cosinus table. Range [0:Pi*2[
const unsigned short g_Cosinus256[] = {
	0x0040, 0x0040, 0x0040, 0x0040, 0x0040, 0x0040, 0x003F, 0x003F, 
	0x003F, 0x003E, 0x003E, 0x003E, 0x003D, 0x003D, 0x003C, 0x003C, 
	0x003B, 0x003B, 0x003A, 0x0039, 0x0038, 0x0038, 0x0037, 0x0036, 
	0x0035, 0x0034, 0x0033, 0x0032, 0x0031, 0x0030, 0x002F, 0x002E, 
	0x002D, 0x002C, 0x002B, 0x002A, 0x0029, 0x0027, 0x0026, 0x0025, 
	0x0024, 0x0022, 0x0021, 0x0020, 0x001E, 0x001D, 0x001B, 0x001A, 
	0x0018, 0x0017, 0x0016, 0x0014, 0x0013, 0x0011, 0x0010, 0x000E, 
	0x000C, 0x000B, 0x0009, 0x0008, 0x0006, 0x0005, 0x0003, 0x0002, 
	0x0000, 0xFFFE, 0xFFFD, 0xFFFB, 0xFFFA, 0xFFF8, 0xFFF7, 0xFFF5, 
	0xFFF4, 0xFFF2, 0xFFF0, 0xFFEF, 0xFFED, 0xFFEC, 0xFFEA, 0xFFE9, 
	0xFFE8, 0xFFE6, 0xFFE5, 0xFFE3, 0xFFE2, 0xFFE0, 0xFFDF, 0xFFDE, 
	0xFFDC, 0xFFDB, 0xFFDA, 0xFFD9, 0xFFD7, 0xFFD6, 0xFFD5, 0xFFD4, 
	0xFFD3, 0xFFD2, 0xFFD1, 0xFFD0, 0xFFCF, 0xFFCE, 0xFFCD, 0xFFCC, 
	0xFFCB, 0xFFCA, 0xFFC9, 0xFFC8, 0xFFC8, 0xFFC7, 0xFFC6, 0xFFC5, 
	0xFFC5, 0xFFC4, 0xFFC4, 0xFFC3, 0xFFC3, 0xFFC2, 0xFFC2, 0xFFC2, 
	0xFFC1, 0xFFC1, 0xFFC1, 0xFFC0, 0xFFC0, 0xFFC0, 0xFFC0, 0xFFC0, 
	0xFFC0, 0xFFC0, 0xFFC0, 0xFFC0, 0xFFC0, 0xFFC0, 0xFFC1, 0xFFC1, 
	0xFFC1, 0xFFC2, 0xFFC2, 0xFFC2, 0xFFC3, 0xFFC3, 0xFFC4, 0xFFC4, 
	0xFFC5, 0xFFC5, 0xFFC6, 0xFFC7, 0xFFC8, 0xFFC8, 0xFFC9, 0xFFCA, 
	0xFFCB, 0xFFCC, 0xFFCD, 0xFFCE, 0xFFCF, 0xFFD0, 0xFFD1, 0xFFD2, 
	0xFFD3, 0xFFD4, 0xFFD5, 0xFFD6, 0xFFD7, 0xFFD9, 0xFFDA, 0xFFDB, 
	0xFFDC, 0xFFDE, 0xFFDF, 0xFFE0, 0xFFE2, 0xFFE3, 0xFFE5, 0xFFE6, 
	0xFFE8, 0xFFE9, 0xFFEA, 0xFFEC, 0xFFED, 0xFFEF, 0xFFF0, 0xFFF2, 
	0xFFF4, 0xFFF5, 0xFFF7, 0xFFF8, 0xFFFA, 0xFFFB, 0xFFFD, 0xFFFE, 
	0x0000, 0x0002, 0x0003, 0x0005, 0x0006, 0x0008, 0x0009, 0x000B, 
	0x000C, 0x000E, 0x0010, 0x0011, 0x0013, 0x0014, 0x0016, 0x0017, 
	0x0018, 0x001A, 0x001B, 0x001D, 0x001E, 0x0020, 0x0021, 0x0022, 
	0x0024, 0x0025, 0x0026, 0x0027, 0x0029, 0x002A, 0x002B, 0x002C, 
	0x002D, 0x002E, 0x002F, 0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 
	0x0035, 0x0036, 0x0037, 0x0038, 0x0038, 0x0039, 0x003A, 0x003B, 
	0x003B, 0x003C, 0x003C, 0x003D, 0x003D, 0x003E, 0x003E, 0x003E, 
	0x003F, 0x003F, 0x003F, 0x0040, 0x0040, 0x0040, 0x0040, 0x0040, 
};
// Size: 1024 bytes
